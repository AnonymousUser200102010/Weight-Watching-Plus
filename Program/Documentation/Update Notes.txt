Update 6:

Highlights:
-- Removed all global variables relating to the MainForm, as I've now figured out how to manipulate them without the need for a direct reference.
-- MANY properties added for the mainform. I hope to have a better way than static properties in the future.
-- Date system tweaked, general datetime validation methods improved.
-- New Mathematics class added...A new class with functions whose primary purpose is parsing mathematical operations and performing arithmetic, but who don't have a more pressing primary function.
-- General calorie "awareness" functions (functions that show and/or parse calorie values) improved.
-- Program now more accurately reflects the real version number with it's version number.
-- Tweaked the functionality of the "clear" button to no longer clear the selected food item on use.
-- Also tweaked the functionality of the "delete" button. It now no longer sends you to the top of the food list. Rather, it sends you to the item that took it's place once it was removed (it's old spot on the list index).
-- Tweaked the format of the diary's "you ate: X Y (of: 'Z')" to "you ate X Y of 'Z'".
-- Added the Lucene.Net library (https://lucenenet.apache.org/) however it will not be used at this time. I hope to implement it later in the form of better user search support.
-- Did some code restructuring and fixed a few summaries which were off.
-- Removed all Errors.Handler references everywhere beside the two error-handling threads in the main program.cs file. This should reduce the size of the Errors.dmp file slightly.
-- UniversalHandlersLibrary updated to 1.0.5527.26879. There will be no update notes for the UHLib as of yet.
-- Optimized several features and functions with LINQ.
-- Added a redundant check in the validation of registry values (the ValidateRegistryValues function) which should not only help with code bloat but should standardize future use of the registry and the pulling of it's values. While this redundancy is _technically_ not needed, I feel it's better to use redundancies now and be a little less efficient then have problems down the road later because I didn't standardize the usage of the registry. I have also not merged the ValidateRegistryValues and the ValidateBackup functions. I am unsure if I will in the future, even though technically they are more or less the same function.

Features:
-- Manual setting of time is now constant until disabled or changed manually.
-- During reset, calories now cannot exceed double the normal allowance or dip below 1200. As well, you can no longer gain double your daily calorie allowance through an under-eating bonus.
-- New "Is Drink" checkbox button added. This allows you to set what is a drink or not, so the program doesn't have to check for each "valid" definer entry for drink keywords.
-- Manual calorie NumericUpDown now supports negative numbers.
-- User serving options expanded: program now supports arithmetic values (1/6, 1 * 3, etc). (Serving sizes, as shown on the food table as well as in the food property box, are still in literal numbers, and do not support any form of arithmetic.)
-- Program now stores it's version number in the registry. When you upgrade to a new version, all files in your "Files//Text//" folder (excluding explanation files) are copied to a new "Backups" folder. This removes the need for manual backup and is especially helpful if you are currently using a development version as a release version. (I.E. you're using a development version as your main application)

Bug Fixes:
-- Introducing (most) special characters into any food property that uses a string is now officially an invalid operation. I'll look into fixing it as I progress with the program.
-- Fixed a bug with manual time that would not allow you to turn it off once it was on.
-- Fixed a bug with the "are you sure" dialog, with regards to subtraction, which would subtract no matter if you chose yes or no.
-- Fixed a bug with the reload button which wouldn't reload the date right, causing extra calories to be added if the date of reset was less than one day from the current date.
-- Fixed a bug with the manual time that would reset twice for no reason no matter what the manual time was set to.
-- General date get/set bugs fixed.
-- Fixed a bug with the diary function in which it would not write the correct amount of calories.
-- Fixed a bug with the "New Item" functionality which would not put the latest item back on the list (in their respective boxes) if the checkbox was checked and then unchecked without clicking the "Add This New Food Item" button.
-- "Fixed" the freezing problem with relation to the search bar.
-- Fixed a bug which would crash the program if you tabbed away from the search bar or attempted to clear after tabbing away from the food table.
-- Fixed multiple bugs in the "Read Registry" function which would cause the program to crash at runtime if you did not have any registry values (or one of the values was off) due to a logic error.
-- Fixed a small bug with the way I handled my classes. MainForm used to initialize twice; now is back to once. I will attempt to do the same with the rest of my classes (probably next update).
-- Fixed another small bug with relation to the "How many X do you plan on Ying", in that it was not refreshing properly due to another logic error.
-- Fixed a bug with the UniversalHandlersLibrary which would throw a "null object exception" when attempting to use any of the Errors class functions.

Notes:
-- It seems the search bar WILL NOT stop the program from freezing when typing in an item with no values. From now until I am fairly convinced, consider all "fixed" updates to be tentative at best.
------------------------------------------------------
Update 5:

Highlights:
-- new item functionality has been improved. Before it allowed a work-around to the "NoIdentical" error by modifying after creating. This has been fixed.
-- Registry system revamped. Hopefully with more accurate and efficient results. So far so good, though.
-- GUI slimmed down. Add/Subtract and Manual are in a tab window together, among other things.
-- At this point in time, with special characters causing errors in completely unrelated functions, I am HIGHLY recommending avoiding ANY and ALL special characters. I don't know why it has such a hard time parsing them, but it does, so I'd avoid them like the plague if I were you.
-- Summaries added to all pertinent functions and variables.
-- Each class in the Mainform.cs file that was not general functions only moved to their own *.cs file for ease of use.
-- Solution folder tree restructured.
-- Documentation added for the UniversalHandlersLibrary in the form of summaries.
-- Global variables removed: Default calories, Calories.

Features:
-- Implemented rudimentary argument support.
-- Manual Reset Time implemented: this feature allows you to set the time the calories will reset, and it will remain at this value until you change it (not recommended for beginners)!
	-- Right now, the MRT resets to disabled every turn on and shut off. This is a sort of "fail-safe" for beginners. I am thinking of implementing it as persistent, however.
-- Under-eating/overeating benefit/subtraction added to ensure people who eat less can have a ... few slip-ups, and those who have persistent overeating habits are punished when the calories reset. For now, this will give the whole allowance. As I progress with the program, I will do research into this subject and hopefully make it more accurate and less arbitrary.
-- Midnight Snacking Penalty is now referred to as the Eating Before Bed Penalty. If you eat within 8 hours of the reset time, you're punished. This strictly follows hour ONLY for the time being. I hope to fix it to be more accurate in the future.
-- Default calorie numeric edit box added so you no longer have to fiddle with the code to set the default calorie allowance.

Bug Fixes:
-- Fixed a bug with the newly implemented "NoIdentical" error on adding an item (which unintentionally stopped property setting).
-- Fixed the persistent bug mentioned in the last update.
-- Manual tab would never update it's value with the actual calorie count. This has been fixed.
-- Search function would not return to the top of the food list upon reaching the last possible valid search entry. This has been fixed. The program would also crash when attempting to use the "exact" search function. This has also been fixed.
-- Fixed a bug with the "Midnight Snacking Penalty" functionality that did not prompt the user, among other things.
-- Fixed a bug with the food table writer function which failed because a value was less than 1 and did not validate correctly thereafter.
-- UniversalHandlersLibrary had a bug where it would crash when Messages.txt did not exist (and to a lesser extent, errors.dmp), this has been fixed.

Notes:
-- Readability of the code may be diminished as of this update due to the reformatting of each class upon splitting from the MainForm.cs file. I've done my best to keep this to a minimum.
------------------------------------------------------
Update 4:

Highlights:
-- FxCop installed and used to update and optimize code.
-- Programmatic folder tree restructuring.
-- Modification class added...A new class with functions whose primary purpose is modification and creation, but who don't have a more pressing primary function.
-- Regions added where appropriate for easier traversal of code. (May not be fully completed as of this update)
-- Serious readability restructuring.
-- ErrorHandler class name changed to PopupHandler, as it does not handle only errors and always uses popups.
-- Switched from dictionaries to tuples as my main form of data management. It's easier to read and in general easier to code than having 4 different libraries instead of one variable with 4 values.
-- Using nested IList for now until I am better acquainted with lists and tuples. I do plan to change it later on.

Features:
-- Diary feature implemented, making food tracking 1/3rd complete.
-- Officially removed food table.txt to food.table conversion support. I don't feel it is required any longer. But if you must convert, I've supplied a converter. I don't know if it works, but it should.
-- Automatic sorting support added for: Food List-box
-- Automatic sorting support added for: food.table

Assets:
-- UniversalHandlersLibrary added. This library contains code for message to file and error to file support, as well as the custom contains method.

Bug Fixes:
-- Diary would not catalogue negative values. This, as well as a few aesthetic features, has been fixed.
-- Fixed a bug in the next button with regards to search that appeared in the 3.5 update (maybe earlier).
-- Applied a sloppy fix to a persistent bug in the refresh button which required three (sometimes more) presses before it actually refreshed. I'll attempt to apply a real fix sometime in the future.

Notes:
Due to the crossover to tuple, there may be a ton of bugs, holes, or nested loops in the code. Just be aware of this in the future.
------------------------------------------------------
Update 3:

Highlights:
-- Update notes started
-- Midnight snacking penalty added
-- Isolated Global Variables to it's own file, hopefully with greater reliability.
-- Set validators for the "foodPropertiesSwitch" function which makes sure there is a value in each text box/numeric_up_down else it stops the user.
-- Added rudimentary error handler for message boxes. Moved to it's own file and I plan to add to it later.
-- Validation class added...A new class for use with functions whose primary purpose is verification and validation, but who don't have a more pressing function.
-- A myriad of structural, practical and readability fixes.